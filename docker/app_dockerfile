# Use a slim Python image to reduce size
FROM python:3.10-slim

# Set working directory in the container
WORKDIR /app

# Copy application files
COPY ./ /app

# Copy the requirements file separately to leverage Docker caching
COPY ./docker/requirements.txt requirements.txt

# Install system dependencies for MySQL, MSSQL, and Oracle clients
RUN apt-get update && \
    apt-get install --no-install-recommends --yes \
    unixodbc \
    unixodbc-dev \
    curl \
    libodbc1 \
    odbcinst \
    default-mysql-client \
    apt-utils \
    gnupg2 \
    g++ \
    build-essential \
    python3-dev \
    libssl-dev \
    libaio1 \
    libssl3 \
    pkg-config \
    unzip && \
    rm -rf /var/lib/apt/lists/*

# Add MSSQL driver repository and install msodbcsql18
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y --no-install-recommends msodbcsql18 && \
    rm -rf /var/lib/apt/lists/*

# Oracle Instant Client setup
ENV ORACLE_HOME=/opt/oracle/instantclient_21_1 \
    LD_LIBRARY_PATH=/opt/oracle/instantclient_21_1 \
    PATH=/opt/oracle/instantclient_21_1:$PATH
COPY ./data/oracle/instantclient-basic-linux.x64-21.1.zip /tmp/instantclient-basic.zip
RUN mkdir -p /opt/oracle && \
    unzip /tmp/instantclient-basic.zip -d /opt/oracle && \
    rm /tmp/instantclient-basic.zip && \
    echo "$ORACLE_HOME" > /etc/ld.so.conf.d/oracle-instantclient.conf && \
    ldconfig

# Optional: ODBC setup
COPY ./docker/odbc.ini /etc/odbc.ini
RUN odbcinst -i -s -f /etc/odbc.ini -l && cat /etc/odbc.ini

# Install required Python packages
RUN pip install --no-cache-dir -r requirements.txt

# Set the Python path
ENV PYTHONPATH=/app

# Command to run migration script (if needed)
# CMD ["python", "app/main.py"]